from sqladmin import Admin, ModelView
from fastapi import FastAPI
from data.engine import async_engine, session_maker  # —Ç–≤–æ–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
from data.models import User, Category, Product  # —Ç–≤–æ–∏ –º–æ–¥–µ–ª–∏

from sqladmin.authentication import AuthenticationBackend
from starlette.requests import Request


# –ü—Ä–æ—Å—Ç–æ–π –±—ç–∫–µ–Ω–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Ç–æ–∫–µ–Ω—ã, OAuth, —Å–µ—Å—Å–∏–∏ ‚Äî –ø–æ–∫–∞ —Å–¥–µ–ª–∞–µ–º –ø—Ä–æ—Å—Ç–æ)
class SimpleAuth(AuthenticationBackend):
    async def login(self, request: Request) -> bool:
        form = await request.form()
        return form.get("username") == "admin" and form.get("password") == "1234"

    async def logout(self, request: Request) -> bool:
        return True

    async def authenticate(self, request: Request):
        if request.session.get("token") == "authenticated":
            return True
        return False


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI –∏ Admin
app = FastAPI()

admin = Admin(app, engine=async_engine, authentication_backend=SimpleAuth())

# –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –º–æ–¥–µ–ª–µ–π
class UserAdmin(ModelView, model=User):
    column_list = [User.id, User.user_id, User.username, User.first_name, User.last_name]

class CategoryAdmin(ModelView, model=Category):
    column_list = [Category.id, Category.name]

class ProductAdmin(ModelView, model=Product):
    column_list = [Product.id, Product.name, Product.price, Product.category_id, Product.user_id]
    form_excluded_columns = ["id"]
    icon = "üçΩÔ∏è"

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
admin.add_view(UserAdmin)
admin.add_view(CategoryAdmin)
admin.add_view(ProductAdmin)
